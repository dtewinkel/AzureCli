stages:
- stage: build
  displayName: Version and build
  jobs:

  - job: run_build
    displayName: Build, publish AzureCli Module
    variables:
      GitVersion.ArtifactPath: $(build.artifactStagingDirectory)/GitVersion
      GitVersion.JsonPath: $(build.artifactStagingDirectory)
      Module.Path: $(Module.Name)/$(Module.Name)
      Module.ArtifactPath: $(build.artifactStagingDirectory)/$(Module.Name)
      SolutionFile: AzureCli.sln
      CompanyName: Daniël te Winkel
      Author: Daniël te Winkel
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
    pool:
      vmImage: ubuntu-latest
    steps:

    - task: GitVersion@5
      displayName: Determine Version using GitVersion
      inputs:
        runtime: core
        configFilePath: ${{ parameters.GitVersionFile }}

    - task: DotNetCoreCLI@2
      displayName: Resore NuGet packages
      inputs:
        command: restore
        projects: $(SolutionFile)
        verbosityRestore: Normal

    - task: DotNetCoreCLI@2
      displayName: Build projects
      inputs:
        command: build
        projects: $(SolutionFile)
        arguments: --no-restore --configuration $(Configuration)
        verbosityRestore: Normal

    - task: CopyFiles@2
      displayName: Copy Module files
      inputs:
        SourceFolder: $(Module.Path)
        Contents: '**'
        TargetFolder: $(Module.ArtifactPath)

    - pwsh: |
        $modulePath = (Join-Path "$(Module.Path)" "${ProjectName}.psd1")
        $year = ([DateTime]"$(GitVersion.CommitDate)").Year
        $copyright = "Copyright © ${year}, $(CompanyName). All rights reserved."
        $updateParameters = @{
          Path = $modulePath
          ModuleVersion = '$(GitVersion.MajorMinorPatch)'
          Copyright = $copyright
          Author = '$(Author)'
          CompanyName = '$(CompanyName)'
        }
        if("$(GitVersion.PreReleaseTag)" -ne "")
        {
          $updateParameters.Add("Prerelease", '$(GitVersion.PreReleaseTag)')
        }
        Update-ModuleManifest @updateParameters
      displayName: Update Module manifest

    - publish: $(Module.ArtifactPath)
      artifact: $(Module.ArtifactName)
      displayName: Publish Module Artifact
